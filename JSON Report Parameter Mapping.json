{
    "folders":{
        "Accounting":{
            "reports":{
                "Return Reserve":{
                    "data_source": "eCom_ReportDB",
                    "data_sets":{
                        "ReportDataset":{
                            "query_type": "Stored Procedure",
                            "query": "rpt_Returns_Reserve_Report"
                        },
                        "Banner":{
                            "query_type": "Stored Procedure",
                            "query": "par_Banner"
                        }
                    },
                    "parameters":{
                        "Banner":{
                            "type": "Dropdown",
                            "query_type": "Stored Procedure",
                            "query": "par_Banner",
                            "value": "Banner_Number",
                            "label": "Banner_Name"
                        },
                        "Start_Date":{
                            "type": "DateTime",
                            "query_type": "Fixed",
                            "query": "",
                            "value": "",
                            "label": ""
                        },
                        "End_Date":{
                            "type": "DateTime",
                            "query_type": "Fixed",
                            "query": "",
                            "value": "",
                            "label": ""
                        }
                    }
                }
            }
        },
        "Administration":{
            "reports":{
                "DDS Validation":{
                    "data_source": "ReportDataSource",
                    "data_sets":{
                        "ReportDataset":{
                            "query_type": "In Line",
                            "query": "BEGIN SELECT S.[Report_Name], COUNT(DISTINCT S.Subscription_Id) AS Subscription_Count, COUNT(DISTINCT E.ExecutionId) AS Execution_Count FROM [dbo].[BCF_Subscriptions_DD] S WITH(NOLOCK) LEFT OUTER JOIN [ReportServer].dbo.ExecutionLog3 E WITH(NOLOCK) ON S.Report_Name collate SQL_Latin1_General_CP1_CI_AS  = SUBSTRING(E.ItemPath, CHARINDEX('/', E.ItemPath,CHARINDEX('/',E.ItemPath)+1)+1, LEN(ItemPath)) AND E.UserName = 'CORP\\TJXASVC-DBSG-SVC-SS' AND Convert(varchar(10),E.TimeStart,111) = DATEADD(wk, DATEDIFF(wk,0,GETDATE()), 0) AND E.ItemPath LIKE '%BCF%' GROUP BY [Report_Name] UNION ALL SELECT S.[Report_Name], COUNT(DISTINCT S.Subscription_Id) AS Subscription_Count, COUNT(DISTINCT E.ExecutionId) AS Execution_Count FROM [dbo].[VPP_Subscriptions_DD] S WITH(NOLOCK) LEFT OUTER JOIN [ReportServer].dbo.ExecutionLog3 E WITH(NOLOCK) --ON S.Report_Name collate SQL_Latin1_General_CP1_CI_AS  = SUBSTRING(E.ItemPath, CHARINDEX('/', E.ItemPath,CHARINDEX('/',E.ItemPath)+1)+1, LEN(ItemPath)) ON (CASE WHEN S.Report_Name = 'VPP by Buy Type' THEN 'Vendor Performance Profitability By BuyType' WHEN S.Report_Name = 'VPP Summary' THEN 'Vendor Performance Profitability Summary' ELSE S.Report_Name END) collate SQL_Latin1_General_CP1_CI_AS  = SUBSTRING(E.ItemPath, CHARINDEX('/', E.ItemPath,CHARINDEX('/',E.ItemPath)+1)+1, LEN(ItemPath)) AND E.UserName = 'CORP\\TJXASVC-DBSG-SVC-SS' AND Convert(varchar(10),E.TimeStart,111) = DATEADD(wk, DATEDIFF(wk,0,GETDATE()), 0) AND E.ItemPath LIKE '%Vendor Performance Profitability%' GROUP BY [Report_Name] UNION ALL SELECT S.[Report_Name], COUNT(DISTINCT S.Subscription_Id) AS Subscription_Count, COUNT(DISTINCT E.ExecutionId) AS Execution_Count FROM [eCom_ReportDB].[dbo].[eComReport_Subscriptions_DD] S WITH(NOLOCK) LEFT OUTER JOIN [ReportServer].dbo.ExecutionLog3 E WITH(NOLOCK) ON CASE WHEN S.Report_Name = 'On Order' THEN 'On Order Report' ELSE S.Report_Name END collate SQL_Latin1_General_CP1_CI_AS  = SUBSTRING(E.ItemPath, CHARINDEX('/', E.ItemPath,CHARINDEX('/',E.ItemPath)+1)+1, LEN(ItemPath)) AND E.UserName = 'CORP\\TJXASVC-DBSG-SVC-SS' AND Convert(varchar(10),E.TimeStart,111) = DATEADD(wk, DATEDIFF(wk,0,GETDATE()), 0) WHERE S.Schedule = 'Weekly' AND S.Is_Active = 'Y' GROUP BY [Report_Name] ORDER BY 1 END ELSE BEGIN SELECT S.[Report_Name], COUNT(DISTINCT S.Subscription_Id) AS Subscription_Count, COUNT(DISTINCT E.ExecutionId) AS Execution_Count FROM [dbo].[BCF_Subscriptions_DD] S WITH(NOLOCK) LEFT OUTER JOIN [ReportServer].dbo.ExecutionLog3 E WITH(NOLOCK) ON S.Report_Name collate SQL_Latin1_General_CP1_CI_AS  = SUBSTRING(E.ItemPath, CHARINDEX('/', E.ItemPath,CHARINDEX('/',E.ItemPath)+1)+1, LEN(ItemPath)) AND E.UserName = 'CORP\\TJXASVC-DBSG-SVC-SS' AND Convert(varchar(10),E.TimeStart,111) = DATEADD(wk, DATEDIFF(wk,0,GETDATE()), 0) AND E.ItemPath LIKE '%BCF%' WHERE S.Schedule = 'Weekly' GROUP BY [Report_Name] UNION ALL SELECT S.[Report_Name], COUNT(DISTINCT S.Subscription_Id) AS Subscription_Count, COUNT(DISTINCT E.ExecutionId) AS Execution_Count FROM [dbo].[VPP_Subscriptions_DD] S WITH(NOLOCK) LEFT OUTER JOIN [ReportServer].dbo.ExecutionLog3 E WITH(NOLOCK) --ON S.Report_Name collate SQL_Latin1_General_CP1_CI_AS  = SUBSTRING(E.ItemPath, CHARINDEX('/', E.ItemPath,CHARINDEX('/',E.ItemPath)+1)+1, LEN(ItemPath)) ON (CASE WHEN S.Report_Name = 'VPP by Buy Type' THEN 'Vendor Performance Profitability By BuyType' WHEN S.Report_Name = 'VPP Summary' THEN 'Vendor Performance Profitability Summary' ELSE S.Report_Name END) collate SQL_Latin1_General_CP1_CI_AS  = SUBSTRING(E.ItemPath, CHARINDEX('/', E.ItemPath,CHARINDEX('/',E.ItemPath)+1)+1, LEN(ItemPath)) AND E.UserName = 'CORP\\TJXASVC-DBSG-SVC-SS' AND Convert(varchar(10),E.TimeStart,111) = DATEADD(wk, DATEDIFF(wk,0,GETDATE()), 0) AND E.ItemPath LIKE '%Vendor Performance Profitability%' WHERE S.Schedule = 'Weekly' GROUP BY [Report_Name] UNION ALL SELECT S.[Report_Name], COUNT(DISTINCT S.Subscription_Id) AS Subscription_Count, COUNT(DISTINCT E.ExecutionId) AS Execution_Count FROM [eCom_ReportDB].[dbo].[eComReport_Subscriptions_DD] S WITH(NOLOCK) LEFT OUTER JOIN [ReportServer].dbo.ExecutionLog3 E WITH(NOLOCK) ON CASE WHEN S.Report_Name = 'On Order' THEN 'On Order Report' ELSE S.Report_Name END collate SQL_Latin1_General_CP1_CI_AS  = SUBSTRING(E.ItemPath, CHARINDEX('/', E.ItemPath,CHARINDEX('/',E.ItemPath)+1)+1, LEN(ItemPath)) AND E.UserName = 'CORP\\TJXASVC-DBSG-SVC-SS' AND Convert(varchar(10),E.TimeStart,111) = DATEADD(wk, DATEDIFF(wk,0,GETDATE()), 0) WHERE S.Schedule = 'Weekly' AND S.Is_Active = 'Y' GROUP BY [Report_Name] ORDER BY 1 END"
                        }
                    },
                    "parameters":{}
                },
                "In Progress Reports":{
                    "data_source": "ReportServerDB",
                    "data_sets":{
                        "RunningJobsDS":{
                            "query_type": "In Line",
                            "query": "SELECT RunningJobs.RequestPath ,RunningJobs.StartDate ,Users.UserName ,RunningJobs.ComputerName ,CASE WHEN RunningJobs.JobType = 0 THEN 'Interactive' WHEN RunningJobs.JobType = 1 THEN 'Subscription' ELSE ' ' END AS ReportType ,RunningJobs.Description FROM RunningJobs INNER JOIN Users ON  Users.UserID = RunningJobs.UserId ORDER BY RunningJobs.StartDate DESC"
                        }
                    },
                    "parameters":{}
                },
                "Report Analysis":{
                    "data_source": "ReportServerDB",
                    "data_sets":{
                        "SubscriptionDataSet":{
                            "query_type": "In Line",
                            "query": "SELECT ExecutionLog3.ItemPath ,ExecutionLog3.UserName ,COUNT(ExecutionLog3.TimeStart) AS Counts, ROW_NUMBER() OVER(PARTITION BY ExecutionLog3.ItemPath ORDER BY ExecutionLog3.ItemPath,COUNT(ExecutionLog3.TimeStart) DESC) AS [Rank] FROM ExecutionLog3 WHERE CONVERT(varchar(10),ExecutionLog3.TimeStart,111) >= (CASE WHEN @FromDate IS NULL THEN CONVERT(varchar(10),ExecutionLog3.TimeStart,111) ELSE @FromDate END) AND CONVERT(varchar(10),ExecutionLog3.TimeEnd,111) <= (CASE WHEN @ToDate IS NULL THEN CONVERT(varchar(10),ExecutionLog3.TimeEnd,111) ELSE @ToDate END) GROUP BY  ExecutionLog3.ItemPath ,ExecutionLog3.UserName"
                        },
                        "ReportListDataSet":{
                            "query_type": "In Line",
                            "query": "Select Name, Left(Path, Len(Path)-Len(Name)-1) Path, Path as FullPath from dbo.Catalog where Path not like '%SubReports%' and Path not like '%Data Sources%' and TYPE = 2"
                        },
                        "FolderListDataSet":{
                            "query_type": "In Line",
                            "query": "Select Right(Path, Len(Path)-1) Folders, Path from dbo.Catalog where Path not like '%SubReports%' and Path not like '%Data Sources%' and TYPE = 1 and ParentID is not NULL"
                        }
                    },
                    "parameters":{
                        "FolderList":{
                            "type": "Dropdown",
                            "query_type": "In Line",
                            "query": "Select Right(Path, Len(Path)-1) Folders, Path from dbo.Catalog where Path not like '%SubReports%' and Path not like '%Data Sources%' and TYPE = 1 and ParentID is not NULL",
                            "value": "Path",
                            "label": "Folders"
                        },
                        "ReportList":{
                            "type": "Dropdown",
                            "query_type": "In Line",
                            "query": "Select Name, Left(Path, Len(Path)-Len(Name)-1) Path, Path as FullPath from dbo.Catalog where Path not like '%SubReports%' and Path not like '%Data Sources%' and TYPE = 2",
                            "value": "FullPath",
                            "label": "Name"
                        },
                        "FromDate":{
                            "type": "DateTime",
                            "query_type": "Fixed",
                            "query": "",
                            "value": "",
                            "label": ""
                        },
                        "ToDate":{
                            "type": "DateTime",
                            "query_type": "Fixed",
                            "query": "",
                            "value": "",
                            "label": ""
                        }
                    }
                },
                "Report Failures":{
                    "data_source": "ReportServerDB",
                    "data_sets":{
                        "SubscriptionDataSet":{
                            "query_type": "In Line",
                            "query": "DECLARE @PreviousDateFrom datetime; DECLARE @PreviousDateTo datetime; DECLARE @Today datetime; SET @Today = CONVERT(varchar(10),GETDATE(),111); SET @PreviousDateFrom = @Today; SET @PreviousDateTo = GETDATE(); IF @RunToday = 'Y' BEGIN SELECT ExecutionLog3.ItemPath AS ReportName ,ExecutionLog3.TimeStart ,ExecutionLog3.TimeEnd ,ExecutionLog3.UserName ,dbo.fn_ParseParameters(ExecutionLog3.[Parameters]) Parameters ,ExecutionLog3.Format ,ExecutionLog3.Status ,ExecutionLog3.RequestType ,ExecutionLog3.InstanceName ,CONVERT(varchar(8),(TimeEnd - TimeStart),108) as Duration FROM [dbo].[ExecutionLog3] WHERE ExecutionLog3.Status <> 'rsSuccess' AND ExecutionLog3.TimeStart >= @PreviousDateFrom AND ExecutionLog3.TimeEnd <= @PreviousDateTo AND ExecutionLog3.RequestType IN (SELECT Item FROM dbo.FN_Split_Char (@RequestType, ',')) ORDER BY [dbo].[ExecutionLog3].[TimeStart] desc END ELSE BEGIN SELECT ExecutionLog3.ItemPath AS ReportName ,ExecutionLog3.TimeStart ,ExecutionLog3.TimeEnd ,ExecutionLog3.UserName ,dbo.fn_ParseParameters(ExecutionLog3.[Parameters]) Parameters ,ExecutionLog3.Format ,ExecutionLog3.Status ,ExecutionLog3.RequestType ,ExecutionLog3.InstanceName ,CONVERT(varchar(8),(TimeEnd - TimeStart),108) as Duration FROM [dbo].[ExecutionLog3] WHERE ExecutionLog3.Status <> 'rsSuccess' AND CONVERT(varchar(10),ExecutionLog3.TimeStart,111) >= (CASE WHEN @StartDate IS NULL THEN CONVERT(varchar(10),ExecutionLog3.TimeStart,111) ELSE @StartDate END) AND CONVERT(varchar(10),ExecutionLog3.TimeEnd,111) <= (CASE WHEN @EndDate IS NULL THEN CONVERT(varchar(10),ExecutionLog3.TimeEnd,111) ELSE @EndDate END) AND ExecutionLog3.RequestType IN (SELECT Item FROM dbo.FN_Split_Char (@RequestType, ',')) ORDER BY [dbo].[ExecutionLog3].[TimeStart] desc END"
                        },
                        "ReportListDataSet":{
                            "query_type": "In Line",
                            "query": "Select Name, Left(Path, Len(Path)-Len(Name)-1) Path, Path as FullPath from dbo.Catalog where Path not like '%SubReports%' and Path not like '%Data Sources%' and TYPE = 2"
                        },
                        "FolderListDataSet":{
                            "query_type": "In Line",
                            "query": "Select Right(Path, Len(Path)-1) Folders, Path from dbo.Catalog where Path not like '%SubReports%' and Path not like '%Data Sources%' and TYPE = 1 and ParentID is not NULL"
                        }
                    },
                    "parameters":{
                        "FolderList":{
                            "type": "Dropdown",
                            "query_type": "In Line",
                            "query": "Select Right(Path, Len(Path)-1) Folders, Path from dbo.Catalog where Path not like '%SubReports%' and Path not like '%Data Sources%' and TYPE = 1 and ParentID is not NULL",
                            "value": "Path",
                            "label": "Folders"
                        },
                        "ReportList":{
                            "type": "Dropdown",
                            "query_type": "In Line",
                            "query": "Select Name, Left(Path, Len(Path)-Len(Name)-1) Path, Path as FullPath from dbo.Catalog where Path not like '%SubReports%' and Path not like '%Data Sources%' and TYPE = 2",
                            "value": "FullPath",
                            "label": "Name"
                        },
                        "StartDate":{
                            "type": "DateTime",
                            "query_type": "Fixed",
                            "query": "",
                            "value": "",
                            "label": ""
                        },
                        "EndDate":{
                            "type": "DateTime",
                            "query_type": "Fixed",
                            "query": "",
                            "value": "",
                            "label": ""
                        },
                        "RunToday":{
                            "type": "Dropdown",
                            "query_type": "Fixed",
                            "query": "",
                            "value": "Y,N",
                            "label": "Y,N"
                        },
                        "RequestType":{
                            "type": "Dropdown",
                            "query_type": "Fixed",
                            "query": "",
                            "value": "Interactive,Subscription",
                            "label": "Interactive,Subscription"
                        }
                    }
                },
                "Report History (with Status Filter)":{
                    "data_source": "ReportServerDB",
                    "data_sets":{
                        "ReportHistoryDataSet":{
                            "query_type": "Stored Procedure",
                            "query": "GetReportHistory"
                        },
                        "ReportListDataSet":{
                            "query_type": "In Line",
                            "query": "SELECT NULL as Name, NULL as Path, NULL as FullPath UNION Select Name, Left(Path, Len(Path)-Len(Name)-1) Path, Path as FullPath from dbo.Catalog where Path not like '%SubReports%' and Path not like '%Data Sources%' and TYPE = 2"
                        },
                        "FolderListDataSet":{
                            "query_type": "In Line",
                            "query": "SELECT NULL as Folders, NULL as Path UNION Select Right(Path, Len(Path)-1) Folders, Path from dbo.Catalog where Path not like '%SubReports%' and Path not like '%Data Sources%' and TYPE = 1 and ParentID is not NULL"
                        }
                    },
                    "parameters":{
                        "FolderList":{
                            "type": "Dropdown",
                            "query_type": "In Line",
                            "query": "SELECT NULL as Folders, NULL as Path UNION Select Right(Path, Len(Path)-1) Folders, Path from dbo.Catalog where Path not like '%SubReports%' and Path not like '%Data Sources%' and TYPE = 1 and ParentID is not NULL",
                            "value": "Path",
                            "label": "Folders"
                        },
                        "ReportList":{
                            "type": "Dropdown",
                            "query_type": "In Line",
                            "query": "SELECT NULL as Name, NULL as Path, NULL as FullPath UNION Select Name, Left(Path, Len(Path)-Len(Name)-1) Path, Path as FullPath from dbo.Catalog where Path not like '%SubReports%' and Path not like '%Data Sources%' and TYPE = 2",
                            "value": "FullPath",
                            "label": "Name"
                        },
                        "Status":{
                            "type": "Dropdown",
                            "query_type": "Fixed",
                            "query": "",
                            "value": "1,0",
                            "label": "Success,Failed"
                        },
                        "FromDate":{
                            "type": "DateTime",
                            "query_type": "Fixed",
                            "query": "",
                            "value": "",
                            "label": ""
                        },
                        "ToDate":{
                            "type": "DateTime",
                            "query_type": "Fixed",
                            "query": "",
                            "value": "",
                            "label": ""
                        }
                    }
                },
                "Subscription Details":{
                    "data_source": "ReportServerDB",
                    "data_sets":{
                        "SubscriptionDataSet":{
                            "query_type": "In Line",
                            "query": "IF @Subject IS NULL BEGIN SELECT Catalog.Name as ReportName ,U1.UserName as CreatedBy , Case DeliveryExtension WHEN 'Report Server Email' THEN CASE WHEN LEN(Cast(Subscriptions.ExtensionSettings AS NVARCHAR(Max))) > 3500 THEN NULL ELSE Replace(Replace(SubString(ExtensionSettings,CHARINDEX('Subject</Name><Value>',ExtensionSettings)+21,CHARINDEX('<Name>IncludeLink',ExtensionSettings)-CHARINDEX('Subject</Name><Value>',ExtensionSettings)-62) , '@ReportName',Catalog.Name),'@ExecutionTime',IsNULL(LastRunTime,'')) END ELSE NULL End AS Subject ,Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Cast(Subscriptions.ExtensionSettings AS NVARCHAR(Max)),'<ParameterValues>',''), '<ParameterValue>',''), '</ParameterValue>',''), '<Name>',''), '</Name>',': '), '<Value>',''), '</Value>',' -- '),'</ParameterValues>',''), '@ReportName',Catalog.Name), '@ExecutionTime',IsNULL(LastRunTime,'')) AS ExtensionSettings ,Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Cast(Subscriptions.Parameters AS NVARCHAR(Max)),'<ParameterValues>',''), '<ParameterValue>',''), '</ParameterValue>',''), '<Name>',''), '</Name>',': '), '<Value>',''), '</Value>',' -- '),'</ParameterValues>',''), '<ParameterValues />',''), '<Value />','') Parameters ,Subscriptions.LastStatus ,convert(VARCHAR,Subscriptions.LastRunTime,101) + ' ' + convert(VARCHAR,Subscriptions.LastRunTime,108) LastRunTime ,U2.UserName as ModifiedBy ,convert(VARCHAR,Subscriptions.ModifiedDate,101) + ' ' + convert(VARCHAR,Subscriptions.ModifiedDate,108) ModifiedDate ,Subscriptions.Description ,Subscriptions.DeliveryExtension FROM Subscriptions INNER JOIN dbo.Users U1 ON U1.UserID = OwnerID INNER JOIN dbo.Users U2 ON U2.UserID = ModifiedByID INNER JOIN dbo.Catalog ON ItemID = Report_OID WHERE DataSettings is NULL and DeliveryExtension is not NULL END ELSE BEGIN SELECT Catalog.Name as ReportName ,U1.UserName as CreatedBy , Case DeliveryExtension WHEN 'Report Server Email' THEN CASE WHEN LEN(Cast(Subscriptions.ExtensionSettings AS NVARCHAR(Max))) > 3500 THEN NULL ELSE Replace(Replace(SubString(ExtensionSettings,CHARINDEX('Subject</Name><Value>',ExtensionSettings)+21,CHARINDEX('<Name>IncludeLink',ExtensionSettings)-CHARINDEX('Subject</Name><Value>',ExtensionSettings)-62) , '@ReportName',Catalog.Name),'@ExecutionTime',IsNULL(LastRunTime,'')) END ELSE NULL End AS Subject ,Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Cast(Subscriptions.ExtensionSettings AS NVARCHAR(Max)),'<ParameterValues>',''), '<ParameterValue>',''), '</ParameterValue>',''), '<Name>',''), '</Name>',': '), '<Value>',''), '</Value>',' -- '),'</ParameterValues>',''), '@ReportName',Catalog.Name), '@ExecutionTime',IsNULL(LastRunTime,'')) AS ExtensionSettings ,Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Cast(Subscriptions.Parameters AS NVARCHAR(Max)),'<ParameterValues>',''), '<ParameterValue>',''), '</ParameterValue>',''), '<Name>',''), '</Name>',': '), '<Value>',''), '</Value>',' -- '),'</ParameterValues>',''), '<ParameterValues />',''), '<Value />','') Parameters ,Subscriptions.LastStatus ,convert(VARCHAR,Subscriptions.LastRunTime,101) + ' ' + convert(VARCHAR,Subscriptions.LastRunTime,108) LastRunTime ,U2.UserName as ModifiedBy ,convert(VARCHAR,Subscriptions.ModifiedDate,101) + ' ' + convert(VARCHAR,Subscriptions.ModifiedDate,108) ModifiedDate ,Subscriptions.Description ,Subscriptions.DeliveryExtension FROM Subscriptions INNER JOIN dbo.Users U1 ON U1.UserID = OwnerID INNER JOIN dbo.Users U2 ON U2.UserID = ModifiedByID INNER JOIN dbo.Catalog ON ItemID = Report_OID WHERE DataSettings is NULL and DeliveryExtension is not NULL and (Case DeliveryExtension WHEN 'Report Server Email' THEN Replace(Replace(SubString(ExtensionSettings,CHARINDEX('Subject</Name><Value>',ExtensionSettings)+21,CHARINDEX('<Name>IncludeLink',ExtensionSettings)-CHARINDEX('Subject</Name><Value>',ExtensionSettings)-62) , '@ReportName',Catalog.Name),'@ExecutionTime',IsNULL(LastRunTime,'')) ELSE NULL End) LIKE '%'+@Subject+'%' END"
                        },
                        "ReportListDataSet":{
                            "query_type": "In Line",
                            "query": "Select Name, Left(Path, Len(Path)-Len(Name)-1) Path from dbo.Catalog where Path not like '%SubReports%' and Path not like '%Data Sources%' and TYPE = 2"
                        },
                        "FolderListDataSet":{
                            "query_type": "In Line",
                            "query": "Select Right(Path, Len(Path)-1) Folders, Path from dbo.Catalog where Path not like '%SubReports%' and Path not like '%Data Sources%' and TYPE = 1 and ParentID is not NULL"
                        }
                    },
                    "parameters":{
                        "FolderList":{
                            "type": "Dropdown",
                            "query_type": "In Line",
                            "query": "Select Right(Path, Len(Path)-1) Folders, Path from dbo.Catalog where Path not like '%SubReports%' and Path not like '%Data Sources%' and TYPE = 1 and ParentID is not NULL",
                            "value": "Path",
                            "label": "Folders"
                        },
                        "ReportList":{
                            "type": "Dropdown",
                            "query_type": "In Line",
                            "query": "Select Name, Left(Path, Len(Path)-Len(Name)-1) Path from dbo.Catalog where Path not like '%SubReports%' and Path not like '%Data Sources%' and TYPE = 2",
                            "value": "FullPath",
                            "label": "Name"
                        },
                        "Subject":{
                            "type": "Textbox",
                            "query_type": "Fixed",
                            "query": "",
                            "value": "",
                            "label": ""
                        }
                    }
                }
            }
        }, 
        "Buyer Reports":{
            "reports":{
                "BCF Child SKU By Color":{
                    "data_source": "ReportDataSource",
                    "data_sets":{
                        "ReportDataSet":{
                            "query_type": "Stored Procedure",
                            "query": "rpt_BCF_Child_SKU_By_Color_Report"
                        },
                        "Departments":{
                            "query_type": "Shared",
                            "query": "/SharedDataSets/Departments"
                        },
                        "Classes":{
                            "query_type": "Shared",
                            "query": "/SharedDataSets/Classes"
                        },
                        "Categories":{
                            "query_type": "Shared",
                            "query": "/SharedDataSets/Categories"
                        },
                        "Fiscal_Year":{
                            "query_type": "Shared",
                            "query": "/SharedDataSets/FiscalYear"
                        },
                        "FiscalYearDefault":{
                            "query_type": "Shared",
                            "query": "/SharedDataSets/FiscalYearDefault"
                        },
                        "FiscalWeekDefault":{
                            "query_type": "Shared",
                            "query": "/SharedDataSets/FiscalWeekDefault"
                        },
                        "DepartmentHeaders":{
                            "query_type": "Shared",
                            "query": "/SharedDataSets/DepartmentHeaders"
                        },
                        "ClassHeaders":{
                            "query_type": "Shared",
                            "query": "/SharedDataSets/ClassHeaders"
                        },
                        "Vendors":{
                            "query_type": "Stored Procedure",
                            "query": "par_Vendors"
                        },
                        "Brands":{
                            "query_type": "Stored Procedure",
                            "query": "par_Brands"
                        },
                        "VendorHeaders":{
                            "query_type": "Shared",
                            "query": "/SharedDataSets/VendorHeaders"
                        },
                        "BrandHeaders":{
                            "query_type": "Shared",
                            "query": "/SharedDataSets/BrandHeaders"
                        },
                        "CategoryHeaders":{
                            "query_type": "Shared",
                            "query": "/SharedDataSets/Category"
                        },
                        "Trend":{
                            "query_type": "Shared",
                            "query": "/SharedDataSets/Trend"
                        },
                        "Banner":{
                            "query_type": "Stored Procedure",
                            "query": "par_Banner"
                        }
                    },
                    "parameters":{
                        "Banner":{
                            "type": "Dropdown",
                            "query_type": "Stored Procedure",
                            "query": "par_Banner",
                            "value": "Banner_Number",
                            "label": "Banner_Name"
                        },
                        "Department_No":{
                            "type": "Dropdown",
                            "query_type": "Shared",
                            "query": "/SharedDataSets/Departments",
                            "value": "Department_Number",
                            "label": "Department"
                        },
                        "InterMed":{
                            "type": "Dropdown",
                            "query_type": "Shared",
                            "query": "/SharedDataSets/Classes",
                            "value": "Class_Number",
                            "label": "Class"
                        },
                        "Vendor_Pattern":{
                            "type": "Text",
                            "query_type": "Fixed",
                            "query": "",
                            "value": "",
                            "label": ""
                        },
                        "Class_Number":{
                            "type": "Dropdown",
                            "query_type": "Shared",
                            "query": "/SharedDataSets/Classes",
                            "value": "Class_Number",
                            "label": "Class"
                        },
                        "Vendor":{
                            "type": "Dropdown",
                            "query_type": "Stored Procedure",
                            "query": "par_Vendors",
                            "value": "Vendor_ID",
                            "label": "Vendor"
                        },
                        "Category":{
                            "type": "Dropdown",
                            "query_type": "Shared",
                            "query": "/SharedDataSets/Categories",
                            "value": "Category_Number",
                            "label": "Category"
                        },
                        "Fiscal_Year":{
                            "type": "Textbox",
                            "query_type": "Shared",
                            "query": "/SharedDataSets/FiscalYear",
                            "value": "FISCAL_YEAR",
                            "label": "FISCAL_YEAR"
                        },
                    }
                },
            }
        },
    }
}
